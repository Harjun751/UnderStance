name: General CI script
permissions:
  checks: write
  pull-requests: write
  contents: write

on:
  pull_request:
    branches: [main]
jobs:
  build:
    name: clean
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - uses: actions/setup-node@v4
        with:
          node-version: 'latest'

      - name: Lint & Fix using Standard (Backend)
        continue-on-error: true
        run: |
          npx standard --fix --env=jest ./Backend/
      
      - name: Check for remainding lint errors
        id: lint
        continue-on-error: true
        run: |
          set +e  # disable immediate exit on error
          OUTPUT="$(npx standard --env=jest ./Backend/ 2>&1)"
          EXIT_CODE=$?
          echo 'lint_output<<EOF' >> $GITHUB_OUTPUT
          echo "$OUTPUT" >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
          echo "exit_code=$EXIT_CODE" >> $GITHUB_OUTPUT

      - name : Create comment
        if: steps.lint.outputs.exit_code != '0'
        uses: mshick/add-pr-comment@v2
        with:
          message: |
            **There is one or more linting errors (Backend)**
            ```
            ${{ steps.lint.outputs.lint_output }}
            ```
            üåè

      - name: Lint & Fix using Biome (Frontend)
        continue-on-error: true
        run: |
          set +e
          SECOND_OUTPUT="$(npx @biomejs/biome lint --write ./Frontend/ 2>&1)"
          SECOND_EXIT_CODE=$?
          echo 'second_lint_output<<EOF' >> $GITHUB_OUTPUT
          echo "$SECOND_OUTPUT" >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
          echo "second_exit_code=$SECOND_EXIT_CODE" >> $GITHUB_OUTPUT
          

      - name : Create comment
        if: steps.lint.outputs.second_exit_code != '0'
        uses: mshick/add-pr-comment@v2
        with:
          message: |
            **There is one or more linting errors (Frontend)**
            ```
            ${{ steps.lint.outputs.second_lint_output }}
            ```
            üåè


      - name: Wait on other checks to complete
        uses: lewagon/wait-on-check-action@v1.3.4
        with:
          ref: ${{ github.ref }}
          check-name: 'clean'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10

      - name: Push changed code if lint fails
        if: steps.lint.outputs.exit_code != '0' || steps.lint.outputs.second_exit_code != '0'
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Fixed some lint errors"
          git push
          echo "Exiting workflow due to remaining lint errors"
          exit 1

      - name: Format backend using prettier
        run: |
          npx prettier --tab-width 4 --use-tabs false --write /home/runner/work/UnderStance/UnderStance/Backend/**/*.{js,jsx,ts,tsx}
        
      - name: Format frontend using biome
        run: |
          npx @biomejs/biome format --indent-width=4 --indent-style=space ./Frontend/ --write

      - name: Push formatted changes
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Prettified code üíÖ"
          git push
